apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven'

version = "0.1";
sourceCompatibility = '1.7'
mainClassName = 'jsr223.powershell.Main'
defaultTasks 'installApp'

// Configure the maven repository deployment
install {
    repositories.mavenInstaller {
        // Set the version
        pom.version = project.version
        // Set the group/namespace for the maven repository deployment.
        pom.groupId = project.groupId
        // Give the artifact a 'base name' (The version is added to the 'base name')
        pom.artifactId = project.artifactId
    }
}

repositories {
    if (project.hasProperty('local')) {
            mavenLocal()
        }
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'http://repository.activeeon.com/content/groups/proactive/'}
}

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

dependencies {
    provided "org.objectweb.proactive:programming-extension-dataspaces:7.29.0-SNAPSHOT"
    provided "org.ow2.proactive:scheduler-api:7.29.0-SNAPSHOT"

    testRuntime "org.objectweb.proactive:programming-extension-dataspaces:7.29.0-SNAPSHOT"
    testRuntime "org.ow2.proactive:scheduler-api:7.29.0-SNAPSHOT"

    // jni4net is not hosted on maven central, later put in in the activeeon repo
    compile files("${projectDir}/tools/jni4net.j-0.8.8.0.jar")

    runtime files("${projectDir}/tools/jni4net.n-0.8.8.0.dll")
    runtime files("${projectDir}/tools/jni4net.n.w64.v40-0.8.8.0.dll")
    runtime files("${projectDir}/tools/jni4net.n.w32.v40-0.8.8.0.dll")
    runtime files("${projectDir}/tools/jni4net.n.w64.v20-0.8.8.0.dll")
    runtime files("${projectDir}/tools/jni4net.n.w32.v20-0.8.8.0.dll")
    runtime files("${projectDir}/tools/jsr223utils.dll")

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.google.guava:guava:19.0'
}

// Upload the archives to the nexus repository. For execution, that needs to have
// the username and password set in the command line by -DnexusUsername=[username]
// and -DnexusPassword=[password]
uploadArchives {
    repositories {
        mavenDeployer {
            // Set the version
            pom.version = project.version
            // Set the group/namespace for the maven repository deployment.
            pom.groupId = project.groupId
            // Give the artifact a 'base name' (The version is added to the 'base name')
            pom.artifactId = project.artifactId

            snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
            repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                authentication(userName: "${System.getProperty('nexusUsername')}",
                        password: "${System.getProperty('nexusPassword')}")
            }
        }
    }
}