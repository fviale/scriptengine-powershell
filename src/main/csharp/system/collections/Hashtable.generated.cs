//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Collections {
    
    
    #region Component Designer generated code 
    public partial class Hashtable_ {
        
        public static global::java.lang.Class _class {
            get {
                return global::System.Collections.@__Hashtable.staticClass;
            }
        }
    }
    #endregion
    
    #region Component Designer generated code 
    [global::net.sf.jni4net.attributes.JavaProxyAttribute(typeof(global::System.Collections.Hashtable), typeof(global::System.Collections.Hashtable_))]
    [global::net.sf.jni4net.attributes.ClrWrapperAttribute(typeof(global::System.Collections.Hashtable), typeof(global::System.Collections.Hashtable_))]
    internal sealed partial class @__Hashtable : global::java.lang.Object {
        
        internal new static global::java.lang.Class staticClass;
        
        private @__Hashtable(global::net.sf.jni4net.jni.JNIEnv @__env) : 
                base(@__env) {
        }
        
        private static void InitJNI(global::net.sf.jni4net.jni.JNIEnv @__env, java.lang.Class @__class) {
            global::System.Collections.@__Hashtable.staticClass = @__class;
        }
        
        private static global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> @__Init(global::net.sf.jni4net.jni.JNIEnv @__env, global::java.lang.Class @__class) {
            global::System.Type @__type = typeof(__Hashtable);
            global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod> methods = new global::System.Collections.Generic.List<global::net.sf.jni4net.jni.JNINativeMethod>();
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetEnumerator", "GetEnumerator0", "()Lsystem/collections/IDictionaryEnumerator;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "CopyTo", "CopyTo1", "(Lsystem/Array;I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getCount", "Count2", "()I"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getSyncRoot", "SyncRoot3", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isSynchronized", "IsSynchronized4", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getItem", "Item5", "(Lsystem/Object;)Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "setItem", "Item6", "(Lsystem/Object;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getKeys", "Keys7", "()Lsystem/collections/ICollection;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "getValues", "Values8", "()Lsystem/collections/ICollection;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Contains", "Contains9", "(Lsystem/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Add", "Add10", "(Lsystem/Object;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Clear", "Clear11", "()V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isReadOnly", "IsReadOnly12", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "isFixedSize", "IsFixedSize13", "()Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Remove", "Remove14", "(Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "GetObjectData", "GetObjectData15", "(Lsystem/runtime/serialization/SerializationInfo;Lsystem/runtime/serialization/St" +
                        "reamingContext;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "OnDeserialization", "OnDeserialization16", "(Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Clone", "Clone17", "()Lsystem/Object;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContainsKey", "ContainsKey18", "(Lsystem/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "ContainsValue", "ContainsValue19", "(Lsystem/Object;)Z"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "Synchronized", "Synchronized20", "(Lsystem/collections/Hashtable;)Lsystem/collections/Hashtable;"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable0", "__ctorHashtable0", "(Lnet/sf/jni4net/inj/IClrProxy;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable1", "__ctorHashtable1", "(Lnet/sf/jni4net/inj/IClrProxy;I)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable2", "__ctorHashtable2", "(Lnet/sf/jni4net/inj/IClrProxy;IF)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable3", "__ctorHashtable3", "(Lnet/sf/jni4net/inj/IClrProxy;IFLsystem/Object;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable4", "__ctorHashtable4", "(Lnet/sf/jni4net/inj/IClrProxy;IFLsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable5", "__ctorHashtable5", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/Object;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable6", "__ctorHashtable6", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable7", "__ctorHashtable7", "(Lnet/sf/jni4net/inj/IClrProxy;ILsystem/Object;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable8", "__ctorHashtable8", "(Lnet/sf/jni4net/inj/IClrProxy;ILsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable9", "__ctorHashtable9", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable10", "__ctorHashtable10", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;F)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable11", "__ctorHashtable11", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;Lsystem/Object;Lsy" +
                        "stem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable12", "__ctorHashtable12", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;Lsystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable13", "__ctorHashtable13", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;FLsystem/Object;Ls" +
                        "ystem/Object;)V"));
            methods.Add(global::net.sf.jni4net.jni.JNINativeMethod.Create(@__type, "__ctorHashtable14", "__ctorHashtable14", "(Lnet/sf/jni4net/inj/IClrProxy;Lsystem/collections/IDictionary;FLsystem/Object;)V" +
                        ""));
            return methods;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle GetEnumerator0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/collections/IEnumerator;
            // ()LSystem/Collections/IEnumerator;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::System.Collections.IDictionaryEnumerator>(@__env, ((global::System.Collections.IDictionary)(@__real)).GetEnumerator());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void CopyTo1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle array, int index) {
            // (Lsystem/Array;I)V
            // (LSystem/Array;I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Collections.ICollection)(@__real)).CopyTo(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Array>(@__env, array), index);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static int Count2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()I
            // ()I
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            int @__return = default(int);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((int)(((global::System.Collections.ICollection)(@__real)).Count));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle SyncRoot3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<object>(@__env, ((global::System.Collections.ICollection)(@__real)).SyncRoot);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool IsSynchronized4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(((global::System.Collections.ICollection)(@__real)).IsSynchronized));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Item5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key) {
            // (Lsystem/Object;)Lsystem/Object;
            // (LSystem/Object;)LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<object>(@__env, ((global::System.Collections.IDictionary)(@__real))[global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key)]);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Item6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/Object;Lsystem/Object;)V
            // (LSystem/Object;LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Collections.IDictionary)(@__real))[global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key)] = global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, value);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Keys7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/collections/ICollection;
            // ()LSystem/Collections/ICollection;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::System.Collections.ICollection>(@__env, ((global::System.Collections.IDictionary)(@__real)).Keys);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Values8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/collections/ICollection;
            // ()LSystem/Collections/ICollection;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<global::System.Collections.ICollection>(@__env, ((global::System.Collections.IDictionary)(@__real)).Values);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool Contains9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key) {
            // (Lsystem/Object;)Z
            // (LSystem/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(((global::System.Collections.IDictionary)(@__real)).Contains(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Add10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/Object;Lsystem/Object;)V
            // (LSystem/Object;LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Collections.IDictionary)(@__real)).Add(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key), global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, value));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void Clear11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Collections.IDictionary)(@__real)).Clear();
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static bool IsReadOnly12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(((global::System.Collections.IDictionary)(@__real)).IsReadOnly));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool IsFixedSize13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Z
            // ()Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(((global::System.Collections.IDictionary)(@__real)).IsFixedSize));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void Remove14(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key) {
            // (Lsystem/Object;)V
            // (LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Collections.IDictionary)(@__real)).Remove(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void GetObjectData15(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle info, global::net.sf.jni4net.utils.JniLocalHandle context) {
            // (Lsystem/runtime/serialization/SerializationInfo;Lsystem/runtime/serialization/StreamingContext;)V
            // (LSystem/Runtime/Serialization/SerializationInfo;LSystem/Runtime/Serialization/StreamingContext;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Runtime.Serialization.ISerializable)(@__real)).GetObjectData(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Runtime.Serialization.SerializationInfo>(@__env, info), global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Runtime.Serialization.StreamingContext>(@__env, context));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void OnDeserialization16(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle sender) {
            // (Lsystem/Object;)V
            // (LSystem/Object;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            ((global::System.Runtime.Serialization.IDeserializationCallback)(@__real)).OnDeserialization(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, sender));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Clone17(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()Lsystem/Object;
            // ()LSystem/Object;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = global::net.sf.jni4net.utils.Convertor.FullC2J<object>(@__env, ((global::System.ICloneable)(@__real)).Clone());
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool ContainsKey18(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle key) {
            // (Lsystem/Object;)Z
            // (LSystem/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(@__real.ContainsKey(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, key))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static bool ContainsValue19(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle value) {
            // (Lsystem/Object;)Z
            // (LSystem/Object;)Z
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            bool @__return = default(bool);
            try {
            global::System.Collections.Hashtable @__real = global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, @__obj);
            @__return = ((bool)(@__real.ContainsValue(global::net.sf.jni4net.utils.Convertor.FullJ2C<object>(@__env, value))));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static global::net.sf.jni4net.utils.JniHandle Synchronized20(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle table) {
            // (Lsystem/collections/Hashtable;)Lsystem/collections/Hashtable;
            // (LSystem/Collections/Hashtable;)LSystem/Collections/Hashtable;
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            global::net.sf.jni4net.utils.JniHandle @__return = default(global::net.sf.jni4net.utils.JniHandle);
            try {
            @__return = global::net.sf.jni4net.utils.Convertor.StrongC2Jp<global::System.Collections.Hashtable>(@__env, global::System.Collections.Hashtable.Synchronized(global::net.sf.jni4net.utils.Convertor.StrongJp2C<global::System.Collections.Hashtable>(@__env, table)));
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
            return @__return;
        }
        
        private static void @__ctorHashtable0(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj) {
            // ()V
            // ()V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable();
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable1(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity) {
            // (I)V
            // (I)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity);
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable2(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity, float loadFactor) {
            // (IF)V
            // (IF)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity, loadFactor);
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable3(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity, float loadFactor, global::net.sf.jni4net.utils.JniLocalHandle hcp, global::net.sf.jni4net.utils.JniLocalHandle comparer) {
            // (IFLsystem/Object;Lsystem/Object;)V
            // (IFLSystem/Collections/IHashCodeProvider;LSystem/Collections/IComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity, loadFactor, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IHashCodeProvider>(@__env, hcp), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IComparer>(@__env, comparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable4(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity, float loadFactor, global::net.sf.jni4net.utils.JniLocalHandle equalityComparer) {
            // (IFLsystem/Object;)V
            // (IFLSystem/Collections/IEqualityComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity, loadFactor, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IEqualityComparer>(@__env, equalityComparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable5(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle hcp, global::net.sf.jni4net.utils.JniLocalHandle comparer) {
            // (Lsystem/Object;Lsystem/Object;)V
            // (LSystem/Collections/IHashCodeProvider;LSystem/Collections/IComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IHashCodeProvider>(@__env, hcp), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IComparer>(@__env, comparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable6(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle equalityComparer) {
            // (Lsystem/Object;)V
            // (LSystem/Collections/IEqualityComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IEqualityComparer>(@__env, equalityComparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable7(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity, global::net.sf.jni4net.utils.JniLocalHandle hcp, global::net.sf.jni4net.utils.JniLocalHandle comparer) {
            // (ILsystem/Object;Lsystem/Object;)V
            // (ILSystem/Collections/IHashCodeProvider;LSystem/Collections/IComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IHashCodeProvider>(@__env, hcp), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IComparer>(@__env, comparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable8(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, int capacity, global::net.sf.jni4net.utils.JniLocalHandle equalityComparer) {
            // (ILsystem/Object;)V
            // (ILSystem/Collections/IEqualityComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(capacity, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IEqualityComparer>(@__env, equalityComparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable9(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d) {
            // (Lsystem/collections/IDictionary;)V
            // (LSystem/Collections/IDictionary;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable10(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d, float loadFactor) {
            // (Lsystem/collections/IDictionary;F)V
            // (LSystem/Collections/IDictionary;F)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d), loadFactor);
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable11(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d, global::net.sf.jni4net.utils.JniLocalHandle hcp, global::net.sf.jni4net.utils.JniLocalHandle comparer) {
            // (Lsystem/collections/IDictionary;Lsystem/Object;Lsystem/Object;)V
            // (LSystem/Collections/IDictionary;LSystem/Collections/IHashCodeProvider;LSystem/Collections/IComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IHashCodeProvider>(@__env, hcp), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IComparer>(@__env, comparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable12(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d, global::net.sf.jni4net.utils.JniLocalHandle equalityComparer) {
            // (Lsystem/collections/IDictionary;Lsystem/Object;)V
            // (LSystem/Collections/IDictionary;LSystem/Collections/IEqualityComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IEqualityComparer>(@__env, equalityComparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable13(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d, float loadFactor, global::net.sf.jni4net.utils.JniLocalHandle hcp, global::net.sf.jni4net.utils.JniLocalHandle comparer) {
            // (Lsystem/collections/IDictionary;FLsystem/Object;Lsystem/Object;)V
            // (LSystem/Collections/IDictionary;FLSystem/Collections/IHashCodeProvider;LSystem/Collections/IComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d), loadFactor, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IHashCodeProvider>(@__env, hcp), global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IComparer>(@__env, comparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        private static void @__ctorHashtable14(global::System.IntPtr @__envp, global::net.sf.jni4net.utils.JniLocalHandle @__class, global::net.sf.jni4net.utils.JniLocalHandle @__obj, global::net.sf.jni4net.utils.JniLocalHandle d, float loadFactor, global::net.sf.jni4net.utils.JniLocalHandle equalityComparer) {
            // (Lsystem/collections/IDictionary;FLsystem/Object;)V
            // (LSystem/Collections/IDictionary;FLSystem/Collections/IEqualityComparer;)V
            global::net.sf.jni4net.jni.JNIEnv @__env = global::net.sf.jni4net.jni.JNIEnv.Wrap(@__envp);
            try {
            global::System.Collections.Hashtable @__real = new global::System.Collections.Hashtable(global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IDictionary>(@__env, d), loadFactor, global::net.sf.jni4net.utils.Convertor.FullJ2C<global::System.Collections.IEqualityComparer>(@__env, equalityComparer));
            global::net.sf.jni4net.utils.Convertor.InitProxy(@__env, @__obj, @__real);
            }catch (global::System.Exception __ex){@__env.ThrowExisting(__ex);}
        }
        
        new internal sealed class ContructionHelper : global::net.sf.jni4net.utils.IConstructionHelper {
            
            public global::net.sf.jni4net.jni.IJvmProxy CreateProxy(global::net.sf.jni4net.jni.JNIEnv @__env) {
                return new global::System.Collections.@__Hashtable(@__env);
            }
        }
    }
    #endregion
}
